What is the primary purpose of the Base Plugin in a build system?<br><br>A. To provide a set of common tasks and conventions for builds<br>B. To manage user permissions for build execution<br>C. To optimize the performance of build tasks<br>D. To create user interfaces for build configuration,<b>Correct Answer:</b> A<br><br>The primary purpose of the Base Plugin is to provide a set of common tasks and conventions that are applicable to most builds. It helps in organizing the build process and promotes consistency in how tasks are executed across different projects.
Which of the following tasks is NOT typically associated with the Base Plugin?<br><br>A. clean<br>B. check<br>C. deploy<br>D. assemble,"<b>Correct Answer:</b> C<br><br>The 'deploy' task is not typically associated with the Base Plugin. Instead, the Base Plugin includes tasks like 'clean', 'check', and 'assemble', which are fundamental to the build lifecycle."
What does the 'assemble' task do in the context of the Base Plugin?<br><br>A. It runs all tests associated with the project<br>B. It produces distributions and other consumable artifacts<br>C. It deletes the build directory<br>D. It configures project dependencies,<b>Correct Answer:</b> B<br><br>The 'assemble' task in the context of the Base Plugin is responsible for producing distributions and other consumable artifacts. It serves as a lifecycle task where other tasks that create outputs are attached.
Which configuration is recommended to avoid using in new builds according to the Base Plugin documentation?<br><br>A. default<br>B. archives<br>C. implementation<br>D. testImplementation,<b>Correct Answer:</b> A<br><br>The 'default' configuration is recommended to avoid in new builds as it is primarily maintained for backward compatibility. New builds should utilize more specific configurations with request attributes for dependency resolution.
What is the primary purpose of lifecycle tasks in the context of the Base Plugin?<br><br>A. To define the order in which tasks are executed during a build<br>B. To create new project configurations for dependencies<br>C. To manage the versioning of project artifacts<br>D. To provide a user interface for build management,"<b>Correct Answer:</b> A<br><br>The primary purpose of lifecycle tasks is to define the order in which tasks are executed during a build process. They serve as an umbrella for more specific tasks, ensuring that tasks like 'check' and 'assemble' are executed in a logical sequence, which promotes consistency and organization in the build lifecycle."
Which of the following is NOT a lifecycle task provided by the Base Plugin?<br><br>A. clean<br>B. check<br>C. compile<br>D. assemble,"<b>Correct Answer:</b> C<br><br>The 'compile' task is not a lifecycle task provided by the Base Plugin. Instead, lifecycle tasks include 'clean', 'check', and 'assemble', which are designed to manage the build process and ensure that tasks are executed in the correct order."
What does the 'build' lifecycle task depend on?<br><br>A. Only the 'assemble' task<br>B. Only the 'check' task<br>C. Both 'check' and 'assemble' tasks<br>D. No other tasks,"<b>Correct Answer:</b> C<br><br>The 'build' lifecycle task depends on both the 'check' and 'assemble' tasks. This means that when the 'build' task is executed, it will first run the 'check' task (which typically includes verification tasks like tests) and then the 'assemble' task (which produces the necessary artifacts), ensuring a complete build process."
How should plugins and build authors utilize the 'check' lifecycle task?<br><br>A. By attaching their verification tasks to it<br>B. By creating new configurations for dependencies<br>C. By defining the project's versioning scheme<br>D. By managing the user interface for the build,"<b>Correct Answer:</b> A<br><br>Plugins and build authors should utilize the 'check' lifecycle task by attaching their verification tasks to it. This allows for a structured approach to running tests and other verification processes as part of the build lifecycle, ensuring that all necessary checks are performed before the build is finalized."
What is the primary purpose of dependency management in the context of the Base Plugin?<br><br>A. To define and resolve project dependencies effectively<br>B. To create and manage user interfaces<br>C. To optimize the performance of build tasks<br>D. To automate the testing process,"<b>Correct Answer:</b> A<br><br>The primary purpose of dependency management is to define and resolve project dependencies effectively. This involves specifying which libraries or components a project requires and ensuring that these dependencies are available during the build process, allowing for a smooth integration of various modules."
Which configuration is recommended to avoid using in new builds according to the Base Plugin documentation?<br><br>A. default<br>B. implementation<br>C. testImplementation<br>D. compileOnly,"<b>Correct Answer:</b> A<br><br>The 'default' configuration is recommended to be avoided in new builds as it is primarily maintained for backwards compatibility. Instead, dependency resolution should be performed using more specific configurations that provide better clarity and control over dependencies."
What does the 'archives' configuration in the Base Plugin do?<br><br>A. It automatically builds all artifacts defined on it during the assemble task.<br>B. It manages runtime dependencies for the project.<br>C. It is used to define the main application entry point.<br>D. It specifies the versioning scheme for the project.,"<b>Correct Answer:</b> A<br><br>The 'archives' configuration automatically builds all artifacts defined on it during the assemble task. However, it is also advised that new builds should not use this configuration due to its legacy status, and task dependencies should be declared directly on the assemble task instead."
What is a key feature of the 'base' extension provided by the Base Plugin?<br><br>A. It allows configuration of properties related to archive tasks.<br>B. It manages the execution order of tasks.<br>C. It defines the project's main class for execution.<br>D. It provides a user interface for build configuration.,"<b>Correct Answer:</b> A<br><br>The 'base' extension allows configuration of properties related to archive tasks, such as the default names and directories for archives. This extension provides a structured way to manage how artifacts are created and organized within the build process."
What is the primary purpose of task configuration in the context of the Base Plugin?<br><br>A. To define the order in which tasks are executed<br>B. To specify the dependencies and properties of tasks<br>C. To create new tasks from existing ones<br>D. To manage the versioning of tasks,"<b>Correct Answer:</b> B<br><br>The primary purpose of task configuration in the context of the Base Plugin is to specify the dependencies and properties of tasks. This ensures that tasks are set up correctly before they are executed, allowing for proper execution order and resource management."
Which of the following is a lifecycle task that plugins and build authors should attach their verification tasks to?<br><br>A. assemble<br>B. clean<br>C. check<br>D. build,"<b>Correct Answer:</b> C<br><br>The 'check' task is a lifecycle task that plugins and build authors should attach their verification tasks to. This allows for a structured approach to ensure that all necessary checks, such as running tests, are performed before the build process continues."
What does the 'assemble' task do in the context of the Base Plugin?<br><br>A. Deletes the build directory<br>B. Produces distributions and other consumable artifacts<br>C. Runs all tests in the project<br>D. Configures the project dependencies,"<b>Correct Answer:</b> B<br><br>The 'assemble' task in the context of the Base Plugin is responsible for producing distributions and other consumable artifacts. It serves as a central point for gathering all tasks that create output artifacts, ensuring they are built correctly."
Which configuration is used as a fallback when dependency resolution is performed without request attributes?<br><br>A. archives<br>B. default<br>C. libs<br>D. dists,"<b>Correct Answer:</b> B<br><br>The 'default' configuration is used as a fallback when dependency resolution is performed without request attributes. However, it is advised that new builds and plugins avoid using this configuration for better practices in dependency management."
What is the primary purpose of the Base Plugin in a project?<br><br>A. To provide a set of common tasks and conventions for builds<br>B. To manage external dependencies exclusively<br>C. To enforce strict coding standards across the project<br>D. To optimize the performance of the build process,<b>Correct Answer:</b> A<br><br>The primary purpose of the Base Plugin is to provide a set of common tasks and conventions that promote consistency in how builds are run. It acts as a foundation for other plugins and helps organize tasks effectively within a project.
Which of the following tasks is NOT typically associated with the Base Plugin?<br><br>A. clean<br>B. check<br>C. compile<br>D. assemble,"<b>Correct Answer:</b> C<br><br>The 'compile' task is not typically associated with the Base Plugin. Instead, the Base Plugin includes tasks like 'clean', 'check', and 'assemble', which are part of the lifecycle tasks that help manage the build process."
What does the 'assemble' task do in the context of the Base Plugin?<br><br>A. It runs all tests in the project<br>B. It produces distributions and other consumable artifacts<br>C. It deletes the build directory<br>D. It compiles the source code into executable files,"<b>Correct Answer:</b> B<br><br>The 'assemble' task in the context of the Base Plugin is responsible for producing distributions and other consumable artifacts. It serves as a lifecycle task where other tasks that create outputs are attached, ensuring that all necessary artifacts are built."
Which configuration is added by the Base Plugin for dependency management?<br><br>A. default<br>B. runtime<br>C. test<br>D. compile,"<b>Correct Answer:</b> A<br><br>The Base Plugin adds the 'default' configuration for dependency management. However, it is important to note that new builds and plugins should avoid using this configuration, as it is primarily for backwards compatibility."
What is the primary purpose of build automation in software development?<br><br>A. To manually compile and test code<br>B. To streamline and automate repetitive tasks in the build process<br>C. To eliminate the need for version control systems<br>D. To ensure that all code is written in a single programming language,"<b>Correct Answer:</b> B<br><br>The primary purpose of build automation is to streamline and automate repetitive tasks in the build process, such as compiling code, running tests, and packaging applications. This reduces the potential for human error and increases efficiency, allowing developers to focus on writing code rather than managing builds."
Which of the following is a common task associated with build automation?<br><br>A. Writing user documentation<br>B. Running unit tests<br>C. Designing user interfaces<br>D. Conducting market research,"<b>Correct Answer:</b> B<br><br>Running unit tests is a common task associated with build automation. Automated testing ensures that code changes do not introduce new bugs and that the software behaves as expected. This is an integral part of the build process, helping maintain code quality."
What is a lifecycle task in the context of build automation?<br><br>A. A task that is executed only once during the entire project<br>B. A task that represents a specific phase in the build process<br>C. A task that is unrelated to the build process<br>D. A task that requires manual intervention to complete,"<b>Correct Answer:</b> B<br><br>A lifecycle task represents a specific phase in the build process, coordinating the execution of other tasks that are part of that phase. For example, tasks like 'build', 'check', and 'assemble' are lifecycle tasks that help organize and manage the overall build workflow."
What is the role of the 'assemble' task in build automation?<br><br>A. To delete all build artifacts<br>B. To compile source code into executable files<br>C. To produce distributions and other consumable artifacts<br>D. To run all tests in the project,"<b>Correct Answer:</b> C<br><br>The 'assemble' task in build automation is responsible for producing distributions and other consumable artifacts. It serves as a central point where various tasks that create output files, such as JARs or ZIPs, can be attached, ensuring that all necessary artifacts are generated during the build process."
