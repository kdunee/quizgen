What is the purpose of a version catalog in Gradle?<br><br>A. To declare all direct dependencies of a project in a central location<br>B. To automatically update all dependencies to their latest versions<br>C. To manage the build lifecycle of a project<br>D. To store configuration settings for the IDE,"<b>Correct Answer:</b> A<br><br>A version catalog in Gradle is used to declare all direct dependencies of a project in a central location, allowing for easier management and updates of those dependencies across subprojects. This centralization helps maintain consistency and simplifies dependency management."
What is a transitive dependency?<br><br>A. A dependency that is declared directly in the build file<br>B. A dependency that is required by another dependency<br>C. A dependency that is not used in the project<br>D. A dependency that is automatically generated by Gradle,"<b>Correct Answer:</b> B<br><br>A transitive dependency is a dependency that is required by another dependency. For example, if a library depends on another library, the latter is considered a transitive dependency of the project that uses the first library."
How can you view the dependency tree of a Gradle project?<br><br>A. By running the command `./gradlew dependencies`<br>B. By checking the version catalog file<br>C. By inspecting the build.gradle file directly<br>D. By using the Gradle wrapper to build the project,"<b>Correct Answer:</b> A<br><br>You can view the dependency tree of a Gradle project by running the command `./gradlew :app:dependencies`. This command provides a detailed output of all dependencies, including transitive dependencies, allowing developers to understand the structure of their project's dependencies."
What is the role of repositories in Gradle dependency management?<br><br>A. To define the versions of dependencies<br>B. To specify the source from which dependencies are resolved<br>C. To manage the execution order of tasks<br>D. To store the build artifacts of the project,"<b>Correct Answer:</b> B<br><br>In Gradle dependency management, repositories specify the source from which dependencies are resolved. For example, using `mavenCentral()` indicates that Gradle should look for dependencies in the Maven Central repository, which is a widely used public artifact store."
What is the primary purpose of a version catalog in Gradle?<br><br>A. To declare all direct dependencies of a project in a central location<br>B. To manage the build lifecycle of a project<br>C. To store the source code of the project<br>D. To compile the project into executable files,"<b>Correct Answer:</b> A<br><br>The primary purpose of a version catalog in Gradle is to declare all direct dependencies of a project in a central location. This allows for easier management and updates of dependencies across subprojects, ensuring consistency and reducing duplication in build scripts."
How does a version catalog improve dependency management in Gradle?<br><br>A. By allowing dependencies to be declared in multiple locations<br>B. By providing type-safe accessors for dependencies<br>C. By eliminating the need for versioning<br>D. By automatically downloading all dependencies without configuration,"<b>Correct Answer:</b> B<br><br>A version catalog improves dependency management in Gradle by providing type-safe accessors for dependencies. This feature allows developers to easily add dependencies with autocompletion in their IDE, reducing the likelihood of errors and improving productivity."
What is a transitive dependency in the context of Gradle?<br><br>A. A dependency that is declared directly in the build script<br>B. A dependency that is required by another dependency<br>C. A dependency that is not used in the project<br>D. A dependency that is only used during testing,"<b>Correct Answer:</b> B<br><br>A transitive dependency in the context of Gradle is a dependency that is required by another dependency. This means that when a project includes a library, it may also need other libraries that the first library depends on, which are automatically included in the project's dependency tree."
What file is typically used to define a version catalog in a Gradle project?<br><br>A. build.gradle<br>B. settings.gradle<br>C. gradle/libs.versions.toml<br>D. gradle/dependencies.toml,"<b>Correct Answer:</b> C<br><br>The file typically used to define a version catalog in a Gradle project is `gradle/libs.versions.toml`. This file centralizes the declaration of dependencies and their versions, making it easier to manage and update them across the project."
What is a transitive dependency in the context of Gradle?<br><br>A. A dependency that is directly declared in the build file.<br>B. A dependency that is required by another dependency.<br>C. A dependency that is optional and not required for the project.<br>D. A dependency that is only used during testing.,"<b>Correct Answer:</b> B<br><br>A transitive dependency is a dependency that is required by another dependency. In Gradle, when a library depends on another library, the latter becomes a transitive dependency of the project. This allows for automatic inclusion of necessary libraries without needing to declare them explicitly."
Why is it important to understand transitive dependencies when managing project dependencies?<br><br>A. They can increase the size of the project without any benefits.<br>B. They can lead to version conflicts if not managed properly.<br>C. They are always optional and can be ignored.<br>D. They are only relevant for testing dependencies.,<b>Correct Answer:</b> B<br><br>Understanding transitive dependencies is crucial because they can lead to version conflicts if different libraries require different versions of the same transitive dependency. Proper management ensures that the project remains stable and functions correctly with all required libraries.
How can you view the transitive dependencies of a project in Gradle?<br><br>A. By running the command `./gradlew dependencies`.<br>B. By checking the version catalog file directly.<br>C. By inspecting the source code of each dependency.<br>D. By using the `gradle inspect` command.,"<b>Correct Answer:</b> A<br><br>You can view the transitive dependencies of a project in Gradle by running the command `./gradlew :app:dependencies`. This command outputs the dependency tree, showing both direct and transitive dependencies, which helps in understanding the complete set of libraries used in the project."
What is the primary purpose of a repository in Gradle?<br><br>A. To store project source code<br>B. To serve as a source for resolving dependencies<br>C. To manage project configurations<br>D. To compile Java applications,"<b>Correct Answer:</b> B<br><br>In Gradle, a repository serves as a source for resolving dependencies. It is where Gradle looks for libraries, plugins, and other artifacts needed for building a project. Common repositories include Maven Central, which is widely used for Java dependencies."
Which of the following is an example of a repository type in Gradle?<br><br>A. Local repository<br>B. Version catalog<br>C. Build script<br>D. Dependency tree,"<b>Correct Answer:</b> A<br><br>A local repository is an example of a repository type in Gradle. It can store dependencies that are available on the local file system, while other types of repositories, such as remote repositories, can be accessed over the internet to fetch dependencies."
How does Gradle typically access remote repositories?<br><br>A. Through a web browser<br>B. Using a command-line interface<br>C. By specifying repository URLs in the build script<br>D. Automatically without any configuration,"<b>Correct Answer:</b> C<br><br>Gradle accesses remote repositories by specifying repository URLs in the build script. This allows Gradle to know where to look for dependencies, such as Maven Central, which is commonly used for Java libraries."
What is the significance of the `mavenCentral()` method in a Gradle build script?<br><br>A. It defines the main class of the application<br>B. It specifies the version of the Gradle tool<br>C. It indicates that Maven Central is a repository to resolve dependencies<br>D. It compiles the source code of the project,<b>Correct Answer:</b> C<br><br>The `mavenCentral()` method in a Gradle build script indicates that Maven Central is a repository from which Gradle can resolve dependencies. This method allows developers to easily access a wide range of libraries and plugins hosted on Maven Central.
What is a Build Scan in the context of Gradle?<br><br>A. A tool for managing project dependencies<br>B. A shareable and centralized record of a build<br>C. A method for compiling Java applications<br>D. A type of version control system,"<b>Correct Answer:</b> B<br><br>A Build Scan is a shareable and centralized record of a build that provides insights into the build process, including dependencies, performance, and other metrics. It is a feature offered by Gradle to help developers analyze and improve their builds."
Which command is used to generate a Build Scan in Gradle?<br><br>A. ./gradlew build --scan<br>B. ./gradlew dependencies --scan<br>C. ./gradlew run --scan<br>D. ./gradlew init --scan,<b>Correct Answer:</b> A<br><br>The command './gradlew build --scan' is used to generate a Build Scan in Gradle. This command builds the project and publishes a scan that can be shared and analyzed for insights into the build process.
What is one of the main benefits of using a Build Scan?<br><br>A. It automatically updates project dependencies<br>B. It provides a visual representation of the code structure<br>C. It allows for easy sharing and collaboration on build results<br>D. It compiles code faster than traditional methods,"<b>Correct Answer:</b> C<br><br>One of the main benefits of using a Build Scan is that it allows for easy sharing and collaboration on build results. This feature enables teams to analyze build performance and dependencies collectively, leading to better insights and improvements."
What information can you find in a Build Scan's Dependencies tab?<br><br>A. The source code of the project<br>B. The list of all tasks executed during the build<br>C. The declared dependencies and their transitive dependencies<br>D. The version history of the project,"<b>Correct Answer:</b> C<br><br>In a Build Scan's Dependencies tab, you can find the declared dependencies and their transitive dependencies. This information helps developers understand how different libraries and modules are interconnected within the project."
